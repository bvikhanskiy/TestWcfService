//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GClient.GServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GServiceReference.IGServiceHost")]
    public interface IGServiceHost {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGServiceHost/GetCustomers", ReplyAction="http://tempuri.org/IGServiceHost/GetCustomersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://tempuri.org/IGServiceHost/GetCustomersExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        System.Collections.Generic.Dictionary<long, CommonTypes.Customer> GetCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGServiceHost/GetCustomers", ReplyAction="http://tempuri.org/IGServiceHost/GetCustomersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<long, CommonTypes.Customer>> GetCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGServiceHost/GetInventories", ReplyAction="http://tempuri.org/IGServiceHost/GetInventoriesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://tempuri.org/IGServiceHost/GetInventoriesExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        System.Collections.Generic.Dictionary<long, CommonTypes.Inventory> GetInventories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGServiceHost/GetInventories", ReplyAction="http://tempuri.org/IGServiceHost/GetInventoriesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<long, CommonTypes.Inventory>> GetInventoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGServiceHost/GetOrders", ReplyAction="http://tempuri.org/IGServiceHost/GetOrdersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://tempuri.org/IGServiceHost/GetOrdersExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        System.Collections.Generic.Dictionary<long, CommonTypes.Order> GetOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGServiceHost/GetOrders", ReplyAction="http://tempuri.org/IGServiceHost/GetOrdersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<long, CommonTypes.Order>> GetOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGServiceHost/AddCustomer", ReplyAction="http://tempuri.org/IGServiceHost/AddCustomerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://tempuri.org/IGServiceHost/AddCustomerExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        bool AddCustomer(CommonTypes.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGServiceHost/AddCustomer", ReplyAction="http://tempuri.org/IGServiceHost/AddCustomerResponse")]
        System.Threading.Tasks.Task<bool> AddCustomerAsync(CommonTypes.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGServiceHost/AddInventory", ReplyAction="http://tempuri.org/IGServiceHost/AddInventoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://tempuri.org/IGServiceHost/AddInventoryExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        bool AddInventory(CommonTypes.Inventory inventory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGServiceHost/AddInventory", ReplyAction="http://tempuri.org/IGServiceHost/AddInventoryResponse")]
        System.Threading.Tasks.Task<bool> AddInventoryAsync(CommonTypes.Inventory inventory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGServiceHost/AddOrder", ReplyAction="http://tempuri.org/IGServiceHost/AddOrderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://tempuri.org/IGServiceHost/AddOrderExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        bool AddOrder(CommonTypes.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGServiceHost/AddOrder", ReplyAction="http://tempuri.org/IGServiceHost/AddOrderResponse")]
        System.Threading.Tasks.Task<bool> AddOrderAsync(CommonTypes.Order order);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGServiceHostChannel : GClient.GServiceReference.IGServiceHost, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GServiceHostClient : System.ServiceModel.ClientBase<GClient.GServiceReference.IGServiceHost>, GClient.GServiceReference.IGServiceHost {
        
        public GServiceHostClient() {
        }
        
        public GServiceHostClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GServiceHostClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GServiceHostClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GServiceHostClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.Dictionary<long, CommonTypes.Customer> GetCustomers() {
            return base.Channel.GetCustomers();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<long, CommonTypes.Customer>> GetCustomersAsync() {
            return base.Channel.GetCustomersAsync();
        }
        
        public System.Collections.Generic.Dictionary<long, CommonTypes.Inventory> GetInventories() {
            return base.Channel.GetInventories();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<long, CommonTypes.Inventory>> GetInventoriesAsync() {
            return base.Channel.GetInventoriesAsync();
        }
        
        public System.Collections.Generic.Dictionary<long, CommonTypes.Order> GetOrders() {
            return base.Channel.GetOrders();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<long, CommonTypes.Order>> GetOrdersAsync() {
            return base.Channel.GetOrdersAsync();
        }
        
        public bool AddCustomer(CommonTypes.Customer customer) {
            return base.Channel.AddCustomer(customer);
        }
        
        public System.Threading.Tasks.Task<bool> AddCustomerAsync(CommonTypes.Customer customer) {
            return base.Channel.AddCustomerAsync(customer);
        }
        
        public bool AddInventory(CommonTypes.Inventory inventory) {
            return base.Channel.AddInventory(inventory);
        }
        
        public System.Threading.Tasks.Task<bool> AddInventoryAsync(CommonTypes.Inventory inventory) {
            return base.Channel.AddInventoryAsync(inventory);
        }
        
        public bool AddOrder(CommonTypes.Order order) {
            return base.Channel.AddOrder(order);
        }
        
        public System.Threading.Tasks.Task<bool> AddOrderAsync(CommonTypes.Order order) {
            return base.Channel.AddOrderAsync(order);
        }
    }
}
